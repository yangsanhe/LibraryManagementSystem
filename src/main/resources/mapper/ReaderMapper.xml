<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangsanhe.library.dao.ReaderMapper">
  <resultMap id="BaseResultMap" type="com.yangsanhe.library.entity.Reader">
    <id column="readerbarcode" jdbcType="VARCHAR" property="readerbarcode" />
    <result column="readerName" jdbcType="VARCHAR" property="readername" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="readerType" jdbcType="INTEGER" property="readertype" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="IDType" jdbcType="INTEGER" property="idtype" />
    <result column="IDNumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="borrowNumber" jdbcType="INTEGER" property="borrownumber" />
    <result column="totalnumber" jdbcType="INTEGER" property="totalnumber" />
  </resultMap>
  <sql id="Base_Column_List">
    readerbarcode, readerName, sex, readerType, job, birthday, IDType, IDNumber, telephone, 
    email, desc, borrowNumber, totalnumber
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reader
    where readerbarcode = #{readerbarcode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reader
    where readerbarcode = #{readerbarcode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yangsanhe.library.entity.Reader">
    insert into reader (readerbarcode, readerName, sex, 
      readerType, job, birthday, 
      IDType, IDNumber, telephone, 
      email, desc, borrowNumber, 
      totalnumber)
    values (#{readerbarcode,jdbcType=VARCHAR}, #{readername,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{readertype,jdbcType=INTEGER}, #{job,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{idtype,jdbcType=INTEGER}, #{idnumber,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{borrownumber,jdbcType=INTEGER}, 
      #{totalnumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yangsanhe.library.entity.Reader">
    insert into reader
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="readerbarcode != null">
        readerbarcode,
      </if>
      <if test="readername != null">
        readerName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="readertype != null">
        readerType,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idtype != null">
        IDType,
      </if>
      <if test="idnumber != null">
        IDNumber,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="borrownumber != null">
        borrowNumber,
      </if>
      <if test="totalnumber != null">
        totalnumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="readerbarcode != null">
        #{readerbarcode,jdbcType=VARCHAR},
      </if>
      <if test="readername != null">
        #{readername,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="readertype != null">
        #{readertype,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="idtype != null">
        #{idtype,jdbcType=INTEGER},
      </if>
      <if test="idnumber != null">
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="borrownumber != null">
        #{borrownumber,jdbcType=INTEGER},
      </if>
      <if test="totalnumber != null">
        #{totalnumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yangsanhe.library.entity.Reader">
    update reader
    <set>
      <if test="readername != null">
        readerName = #{readername,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="readertype != null">
        readerType = #{readertype,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="idtype != null">
        IDType = #{idtype,jdbcType=INTEGER},
      </if>
      <if test="idnumber != null">
        IDNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="borrownumber != null">
        borrowNumber = #{borrownumber,jdbcType=INTEGER},
      </if>
      <if test="totalnumber != null">
        totalnumber = #{totalnumber,jdbcType=INTEGER},
      </if>
    </set>
    where readerbarcode = #{readerbarcode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yangsanhe.library.entity.Reader">
    update reader
    set readerName = #{readername,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      readerType = #{readertype,jdbcType=INTEGER},
      job = #{job,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      IDType = #{idtype,jdbcType=INTEGER},
      IDNumber = #{idnumber,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      borrowNumber = #{borrownumber,jdbcType=INTEGER},
      totalnumber = #{totalnumber,jdbcType=INTEGER}
    where readerbarcode = #{readerbarcode,jdbcType=VARCHAR}
  </update>
</mapper>